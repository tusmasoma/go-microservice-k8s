name: CI

on:
  push:
    paths-ignore:
      - '**/*.md'
    branches: [ "main" ]
  #  branches-ignore:
  #    - main
  pull_request:
    branches: [ "main" ]
  workflow_call:
    secrets:
      PRIVATE_KEY:
        required: true
      PUBLIC_KEY:
        required: true
  workflow_dispatch:

jobs:
  commitlint:
    if: github.ref != 'refs/heads/main' # TODO: Remove this line when ready to enforce commitlint on main branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '21.6.1'

      - name: Install dependencies
        run: |
          npm init -y
          npm install --save-dev @commitlint/cli @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js

      - name: Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [catalog, customer, order, commerce-gateway] # サービス名のリスト
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.2

      - name: Setup Go
        uses: actions/setup-go@v4.1.0
        id: setup-go
        with:
          go-version-file: ./microservice-k8s-demo/${{ matrix.service }}/go.mod
          cache-dependency-path: ./microservice-k8s-demo/${{ matrix.service }}/go.sum

      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        working-directory: ./microservice-k8s-demo/${{ matrix.service }}
        run: |
          go mod download
          go mod verify

      - name: Build
        working-directory: ./microservice-k8s-demo/${{ matrix.service }}
        run: |
          go build -v -o app ./cmd/

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.service }}
          path: ./microservice-k8s-demo/${{ matrix.service }}/app

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [catalog, customer, order, commerce-gateway]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app-${{ matrix.service }}
          path: ./microservice-k8s-demo/${{ matrix.service }}/app

      # - name: Setup .env file
      #   run: echo "${{ secrets.LOCAL_ENV_FILE }}" > ./microservice-k8s-demo/.env
      #   env:
      #     LOCAL_ENV_FILE: ${{ secrets.LOCAL_ENV_FILE }}

      - name: Test
        working-directory: ./microservice-k8s-demo/${{ matrix.service }}
        run: go test -v ./...

  lint:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [catalog, customer, order, commerce-gateway]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app-${{ matrix.service }}
          path: ./microservice-k8s-demo/${{ matrix.service }}/app

      - name: Lint
        run: make lint SERVICE=${{ matrix.service }}
  generate:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [catalog, customer, order, commerce-gateway]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
         name: app-${{ matrix.service }}
         path: ./microservice-k8s-demo/${{ matrix.service }}/app

      - name: Generate and check for changes
        run: |
          make generate SERVICE=${{ matrix.service }}
          git add .
          git diff --cached --quiet -- ./**/*.go